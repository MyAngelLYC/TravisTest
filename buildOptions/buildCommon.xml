<?xml version="1.0" encoding="UTF-8"?>
<!--
-package 打包
    -dex 打包代码
        -compile 编译
            -build-setup 编译配置
                -setup 通用配置
                    -check-env 检查环境
            -code-gen 产生R.java
        -obfuscate 混淆
    -package-resources 打包资源
        -crunch
-release-sign 签名
    signapk 签名
    zipalign-helper 对齐优化
-->
<project name="buildCommon" default="buildRelease">
    <!-- Input directories -->
    <property name="project.dir" value="." />
    <property name="source.dir" value="${project.dir}/src" />
    <property name="gen.dir" location="${project.dir}/gen" />
    <property name="res.dir" location="${project.dir}/res" />
    <property name="asset.dir" value="${project.dir}/assets" />
    <property name="jar.libs.dir" value="${project.dir}/libs" />
    <property name="native.libs.dir" location="${project.dir}/libs" />
    <property name="manifest.file" value="${project.dir}/AndroidManifest.xml" />

    <!-- Output directories -->
    <property name="out.dir" value="${project.dir}/bin" />
    <property name="out.classes.absolute.dir" location="${out.dir}/classes" />
    <property name="out.res.absolute.dir" location="${out.dir}/res" />
    <property name="out.rs.obj.absolute.dir" location="${out.dir}/rsObj" />
    <property name="out.rs.libs.absolute.dir" location="${out.dir}/rsLibs" />
    <property name="out.aidl.absolute.dir" location="${out.dir}/aidl" />
    <property name="out.dexed.absolute.dir" location="${out.dir}/dexedLibs" />

    <!-- Intermediate files -->
    <property name="dex.file.name" value="classes.dex" />
    <property name="intermediate.dex.file" location="${out.dir}/${dex.file.name}" />
    <property name="resource.package.file.name" value="${ant.project.name}.ap_" />

    <!-- Build property file -->
    <property name="out.build.prop.file" location="${out.dir}/build.prop" />
    
    <!-- compilation options -->
    <property name="java.encoding" value="UTF-8" />
    <property name="java.target" value="1.7" />
    <property name="java.source" value="1.7" />
    <property name="java.compilerargs" value="" />
    <property name="java.compiler.classpath" value="" />

    <!-- 执行脚本 -->
    <target name="buildRelease">
        <echo message="Current OS Name is ${osName}"/>  
        <echo>Begin build release version ---> 构建开始</echo>
        <antcall target="clean"/>
        <antcall target="init"/>
        <antcall target="code-gen"/>
        <antcall target="compile"/>
        <antcall target="obfuscate"/>
        <antcall target="dex"/>
    </target>

    <!-- 清除编译中间文件 -->
    <target name="clean">
        <echo message="清除上次编译产生的中间文件"/>
        <delete dir="${gen.dir}" failonerror="false"/>
        <delete dir="${out.dir}" failonerror="false"/>        
    </target>

    <!-- 初始化文件目录 -->
    <target name="init">
        <echo message="生成编译所需目录结构"/>
        <mkdir dir="${gen.dir}"/>        
        <mkdir dir="${out.dir}"/>        
        <mkdir dir="${out.classes.absolute.dir}"/>
    </target>

    <!-- 生成代码 -->
    <target name="code-gen">
        <echo message="生成R.java文件"/> 
        <!-- aapt -->
        <exec executable="${aapt}" failonerror="true">
          <arg value="package"/>
          <arg value="-m"/>
          <arg value="-J"/>
          <arg value="${gen.dir}"/>
          <arg value="-M"/>
          <arg value="${manifest.file}"/>
          <arg value="-S"/>
          <arg value="${res.dir}"/>
          <arg value="-I"/>
          <arg value="${android.jar}"/>
        </exec>
        <!-- aidl 暂无-->
    </target>

    <!-- 编译代码为.class文件 -->
    <target name="compile">
        <echo message="编译java代码为class文件"/> 
        <javac encoding="UTF-8"
            debug="true"
            extdirs=""
            target="1.6"
            destdir="${out.classes.absolute.dir}"
            bootclasspath="${android.jar}"
            nowarn="true"                      
            fork="true"
            memoryMaximumSize="1024m"
            includeantruntime="false" >
            <src path="${source.dir}" />
            <src path="${gen.dir}" />
        </javac>
    </target>

    <!-- proguard混淆代码 -->
    <target name="obfuscate">
        <echo message="混淆没有动态传参的方法"/>
    </target>

    <!-- dex打包代码 -->
    <target name="dex">
        <echo message="dex打包代码"/>
        <exec executable="${dx}" failonerror="true">
            <arg value="--dex"/>
            <arg value="--output=${intermediate.dex.file}"/>
            <arg path="${out.classes.absolute.dir}"/>
        </exec>
    </target>
</project>
